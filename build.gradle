plugins {
    id 'java'
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

repositories {
    mavenCentral()
}

ext {

}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.ewerk.gradle.plugins.querydsl'

    group = 'lozm'
    version = '0.1'
    sourceCompatibility = '1.8'

    configurations {
        developmentOnly
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    sourceSets*.java.srcDirs*.each {
        if (!it.exists()) it.mkdirs()
    }
    sourceSets*.resources.srcDirs*.each {
        if (!it.exists()) it.mkdirs()
    }

    def querydslDir = "$projectDir/generated/querydsl"

    querydsl {
        library = "com.querydsl:querydsl-apt"
        jpa = true
        querydslSourcesDir = querydslDir
    }

    sourceSets {
        main.java.srcDir querydslDir
    }

    configurations {
        querydsl.extendsFrom compileClasspath
    }
    compileQuerydsl {
        options.annotationProcessorPath = configurations.querydsl
    }

    dependencies {
        implementation 'org.apache.commons:commons-lang3:3.10'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'com.h2database:h2'

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }

    dependencyManagement {

    }

    test {
        useJUnitPlatform()
    }

}